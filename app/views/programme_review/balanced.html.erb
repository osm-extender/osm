<script type="text/javascript" src="https://www.google.com/jsapi"></script>
<script type="text/javascript">
  google.load("visualization", "1", {packages:["corechart"]});
  google.setOnLoadCallback(function () {
    updateStatus('Retreiving data.');
    setTimeout(drawCharts, 500);
  });

  function drawCharts() {
    updateStatus('Retreiving data.');

    $.ajax({
      url: "<%= programme_review_balanced_data_path %>",
      dataType:"json",
      async: false,
      success: function(data, status, jqXHR) {
        updateStatus('Processing data.');
        var zones_chart = new google.visualization.LineChart(document.getElementById('zones_chart'));
        var methods_chart = new google.visualization.LineChart(document.getElementById('methods_chart'));

        var zones_options = {
          focusTarget: 'category',
          hAxis: {
            format: 'MMM y',
          },
          vAxis: {
            maxValue: data['statistics']['zones']['max_value'],
            gridlines: {
              count: ((data['statistics']['zones']['max_value'] + 1) / 2) + 1,
            }
          }
        };

        var methods_options = {
          focusTarget: 'category',
          hAxis: {
            format: 'MMM y',
          },
          vAxis: {
            maxValue: data['statistics']['methods']['max_value'],
            gridlines: {
              count: ((data['statistics']['methods']['max_value'] + 1) / 2) + 1,
            }
          }
        };

        drawChart(data, zones_options, zones_chart, 'zone');
        drawChart(data, methods_options, methods_chart, 'method');

        writeScore(data, document.getElementById('zones_score'), 'zone');
        writeScore(data, document.getElementById('methods_score'), 'method');

        updateStatus('');
      }
    })
  }


  function drawChart(data, options, chart, type) {
    updateStatus('Processing chart data for' + type + 's.');

    type_key = type+'s';
    labels_key = type+'_labels';
    data_table = new google.visualization.DataTable();

    data_table.addColumn('date', 'Month');
    for(label in data[labels_key]) {
      data_table.addColumn('number', data[labels_key][label][0]);
    }

    for(date_key in data[type_key]) {
      row = new Array();
      date_key_split = date_key.split('_');
      row[0] = new Date(parseInt(date_key_split[0]), parseInt(date_key_split[1], 10)-1, 15);
      for(label in data[labels_key]) {
        label_key = data[labels_key][label][0];
        row.push(data[type_key][date_key][label_key]);
      }
      data_table.addRows([row]);
    }

    chart.draw(data_table, options);
  }


  function writeScore(data, div, type){
    updateStatus('Processing score data for ' + type + 's.');

    sd = data['statistics'][type+'s']['standard_deviation'];
    mv = data['statistics'][type+'s']['max_value'];
    score = Math.round(((mv - sd) / mv) * 100);
    score = 'Your score is ' + score + '%.';

    table =  "<table>";
    table +=   "<tr><th>" + capitaliseFirstLetter(type) + "</th><th>Total</th></tr>";
    for(label in data[type+'_labels']) {
      label_key = data[type+'_labels'][label][0];
      table += "<tr><td>" + label_key + "</td><td>" + data['statistics'][type+'s']['totals'][label_key] + "</td></tr>";
    }
    table += "</table>";

    div.innerHTML = score + '<br/>' + table;
  }
  

  function updateStatus(message) {
    $("#status_message").html(message);
  }


  function capitaliseFirstLetter(string) {
    return string[0].toUpperCase() + string.slice(1);
  }
</script>









<% provide :title, "Balanced Programme" %>

<p>This page uses the tags attached to the activities in you programme in order to give you an idea of how balanced your programme is. You should bear in mind that the results are only as good as the tagging of the activities. The tags which the code pays attention to are shown below each graph and may be entered in any case and with or without the spaces.</p>

<div id="status_message" style="width: 50%; margin-left: auto; margin-right: auto; background-color: #caf18e; text-align: center; font-weight: bold;">
  Loading page.
</div>

<h2>Programme zones</h2>
<div id="zones_chart" style="width: 850px; height: 350px;">
  <div style="width: inherit; height: inherit; display: table-cell; vertical-align: middle; text-align: center;">
    Your graph will appear here soon.
  </div>
</div>
<div id="zones_info">
  <div style="width: 70%; display: inline-block;">
    <p>The following tags are used in evaluating your programme:</p>
    <table>
      <tr><th>Zone</th><th>Tags</th></tr>
      <%- @zones.each do |zone| %>
        <tr><td><%= zone[0] %></td><td><%= zone.join(', ') %></td></tr>
      <%- end %>
    </table>
  </div>
  <div id="zones_score" style="width: 25%; display: inline-block;">
    <p>Your score will appear here soon.</p>
  </div>
</div>

<h2>Programme methods</h2>
<div id="methods_chart" style="width: 850px; height: 350px;">
  <div style="width: inherit; height: inherit; display: table-cell; vertical-align: middle; text-align: center;">
    Your graph will appear here soon.
  </div>
</div>
<div id="methods_info">
  <div style="width: 70%; display: inline-block;">
    <p>The following tags are used in evaluating your programme:</p>
    <table>
      <tr><th>Method</th><th>Tags</th></tr>
      <%- @methods.each do |method| %>
        <tr><td><%= method[0] %></td><td><%= method.join(', ') %></td></tr>
      <%- end %>
    </table>
  </div>
  <div id="methods_score" style="width: 25%; display: inline-block;">
    <p>Your score will appear here soon.</p>
  </div>
</div>

<%- unless @cached_terms.empty? %>
  <h2>Caching</h2>
  <p>In order to speed up the generation of these graphs the data from some of your terms was retreieved from a cache, it the activities used within these terms (or the programme for the term) has changed since they were generated then they will be out of date. If this is the case you may delete the cached data using the links in the table below.</p>
  <table>
    <tr><th>Term</th><th>Created at</th><th>Actions</th></tr>
    <%- @cached_terms.each do |term| %>
      <tr><td><%= @terms[term.term_id].name %></td><td><%= term.created_at.strftime('%d %b %Y %H:%M:%S %Z') %> (<%= distance_of_time_in_words_to_now(term.created_at) %> ago)</td><td><%= link_to '[Delete]', term, confirm: 'Are you sure?', method: :delete %></td></tr>
    <%- end %>
  </table>
<%- end %>
